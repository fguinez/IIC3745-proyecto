# This is a basic workflow to help you get started with Actions

name: tests

# Controls when the workflow will run
on: [pull_request, push, workflow_dispatch]


env:
  registry: my_registry_name
  # Not sure these are actually being passed down to rails, set them as the default in database.yml
  DB_HOST: localhost
  DB_USERNAME: postgres
  DB_PASSWORD: postgres

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_database_name        
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Set up ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.2'
          bundler-cache: true
          
      - name: Create DB
        env:
          RAILS_ENV: "test"
          DB_USER: postgres
          DB_PASSWORD: postgres
          DATABASE_URL: "postgres://{DB_USER}@localhost:5432/{POSTGRES_DB}"
        run: |
          bundle exec rails db:create
          bundle exec rails db:migrate
          bundle exec rails db:seed
          bundle exec rails db:migrate RAILS_ENV=test
                
      - name: Run rails tests
        run: bundle exec rails test
